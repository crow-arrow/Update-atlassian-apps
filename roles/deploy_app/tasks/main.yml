---
- name: Fail early if required variables are not defined
  fail:
    msg: "Missing required variable: {{ item }}"
  when: hostvars[inventory_hostname][item] is not defined
  loop:
    - app
    - instance
    - env
    - app_base
    - app_data_base
    - upload_dir

- name: Set paths
  set_fact:
    app_path: "{{ app_base }}/{{ env }}/{{ app }}/{{ instance }}"
    app_data_path: "{{ app_data_base }}/{{ env }}/{{ app }}/{{ instance }}"

- name: Ensure instance directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ app_path }}"
    - "{{ app_path }}/conf"
    - "{{ app_path }}/bin"
    - "{{ app_path }}/atlassian-jira/WEB-INF/classes"
    - "{{ app_data_path }}"
    - "{{ app_data_path }}"
  become: true

- name: Unpack appdata.tgz
  unarchive:
    src: "{{ upload_dir }}/{{ current_date }}_{{ instance }}_appdata.tgz"
    dest: "{{ app_path }}"
    remote_src: yes
  ignore_errors: true

- name: Unpack homedir.tgz
  unarchive:
    src: "{{ upload_dir }}/{{ current_date }}_{{ instance }}_homedir.tgz"
    dest: "{{ app_data_path }}"
    remote_src: yes
  ignore_errors: true

- name: Restore config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
    mode: preserve
  loop:
    - { src: "{{ app_data_base }}/{{ env }}/{{ app }}/{{ instance }}_dbconfig.xml", dest: "{{ app_data_path }}/dbconfig.xml" }
    - { src: "{{ app_data_base }}/{{ env }}/{{ app }}/{{ instance }}_eazybi.toml", dest: "{{ app_data_path }}/eazybi.toml" }
    - { src: "{{ app_base }}/{{ env }}/{{ app }}/{{ instance }}_server.xml", dest: "{{ app_path }}/conf/server.xml" }
    - { src: "{{ app_base }}/{{ env }}/{{ app }}/{{ instance }}_setenv.sh", dest: "{{ app_path }}/bin/setenv.sh" }
    - { src: "{{ app_base }}/{{ env }}/{{ app }}/{{ instance }}_jira-application.properties.bak", dest: "{{ app_path }}/atlassian-jira/WEB-INF/classes/jira-application.properties" }
    - { src: "{{ app_data_base }}/{{ env }}/{{ app }}/{{ instance }}_secrets-config.yaml", dest: "{{ app_data_path }}/secrets-config.yaml" }
  ignore_errors: true

- name: Restore secured directory
  copy:
    src: "{{ app_data_base }}/{{ env }}/{{ app }}/{{ instance }}_secured/"
    dest: "{{ app_data_path }}/secured/"
    remote_src: yes
    mode: preserve
  ignore_errors: true

- name: Restore keys directory
  copy:
    src: "{{ app_data_base }}/{{ env }}/{{ app }}/{{ instance }}_keys/"
    dest: "{{ app_data_path }}/keys/"
    remote_src: yes
    mode: preserve
  ignore_errors: true

- name: Remove uploaded archive files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ upload_dir }}/{{ current_date }}_{{ instance }}_appdata.tgz"
    - "{{ upload_dir }}/{{ current_date }}_{{ instance }}_homedir.tgz"
  ignore_errors: true

# --- cleanup secrets backups (important for security) ---
- name: Remove secrets backup files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ app_data_base }}/{{ env }}/{{ app }}/{{ instance }}_secrets-config.yaml"
    - "{{ app_data_base }}/{{ env }}/{{ app }}/{{ instance }}_secured"
  ignore_errors: true
