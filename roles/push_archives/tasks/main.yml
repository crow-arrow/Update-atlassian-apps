---
- name: Fail if SSH key is not defined
  fail:
    msg: "POLYGRAN_PRIVATE_KEY is not defined!"
  when: lookup('env', 'POLYGRAN_PRIVATE_KEY') | length == 0

- name: Write private key to file (with mode 0600)
  copy:
    content: "{{ lookup('env', 'POLYGRAN_PRIVATE_KEY') }}"
    dest: "{{ ssh_key_path }}"
    mode: '0600'
  delegate_to: "{{ inventory_hostname }}"
  no_log: true

- name: Verify SSH key was created
  stat:
    path: "{{ ssh_key_path }}"
  delegate_to: "{{ inventory_hostname }}"
  register: ssh_key_stat

- debug:
    msg: "SSH key exists: {{ ssh_key_stat.stat.exists }}, size: {{ ssh_key_stat.stat.size | default(0) }}"

- name: Set SSH args to use private key
  set_fact:
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -i {{ ssh_key_path }}"
  when: ssh_key_stat.stat.exists

- name: Set timestamp fallback
  set_fact:
    now: "{{ now | default(ansible_date_time.iso8601_basic[:8]) }}"

- name: Ensure upload dir exists
  file:
    path: "{{ upload_dir }}"
    state: directory
    mode: '0755'
  become: true
  become_user: "{{ ENV_USER }}"

- name: Rsync from PROD to INT
  ansible.posix.synchronize:
    src: "amalyuld@{{ hostvars[prod_instance_host].ansible_host | default(prod_instance_host) }}:/var/atlassian/application-data/do_not_delete/"
    dest: "{{ upload_dir }}/"
    mode: pull
    archive: true
    compress: true
    rsync_path: "sudo -n -u {{ ENV_USER }} rsync"
    rsync_opts:
      - "--include={{ now }}_{{ instance }}.dump"
      - "--include={{ now }}_{{ instance }}_*.tgz"
      - "--exclude=*"
  delegate_to: "{{ inventory_hostname }}"

- name: Clean up private key
  file:
    path: "{{ ssh_key_path }}"
    state: absent
  when: ssh_key_path is defined
  delegate_to: "{{ inventory_hostname }}"