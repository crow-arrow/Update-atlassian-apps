- name: Set SSH key path
  set_fact:
    ssh_key_path: "/tmp/ssh_key.pem"
  become: false
  tags: [push]

- name: Fail if SSH key is not defined
  fail:
    msg: "POLYGRAN_PRIVATE_KEY is not defined!"
  when: lookup('env', 'POLYGRAN_PRIVATE_KEY') | length == 0
  become: false
  tags: [push]

- name: Write private key to file (with mode 0600)
  copy:
    content: "{{ lookup('env', 'POLYGRAN_PRIVATE_KEY') }}"
    dest: "{{ ssh_key_path }}"
    mode: '0600'
  no_log: true
  become: false
  delegate_to: "{{ inventory_hostname }}"
  tags: [push]

- name: Set SSH args to use private key
  set_fact:
    ansible_ssh_common_args: >-
      -o StrictHostKeyChecking=no
      -o UserKcurrent_datenHostsFile=/dev/null
      -i {{ ssh_key_path }}
  become: false
  tags: [push]

- name: Ensure upload dir exists
  file:
    path: "{{ upload_dir }}"
    state: directory
  become: false
  tags: [push]

- name: Rsync archives from PROD to {{ env }} using SSH key
  ansible.posix.synchronize:
    src: "{{ USER }}@{{ remote_host }}:{{ snapshot_dir }}/"
    dest: "{{ upload_dir }}/"
    mode: pull
    compress: true
    recursive: true
    links: true
    times: false
    perms: false
    rsync_path: "rsync"
    use_ssh_args: true
    rsync_opts:
      - "--include={{ current_date }}_{{ instance }}.dump"
      - "--include={{ current_date }}_{{ instance }}_*.tgz"
      - "--exclude=*"
      - "--no-times"
      - "--no-perms"
  become: false
  delegate_to: "{{ inventory_hostname }}"
  tags: [push]

- name: Clean up private key
  file:
    path: "{{ ssh_key_path }}"
    state: absent
  become: false
  delegate_to: "{{ inventory_hostname }}"
  tags: [push]
