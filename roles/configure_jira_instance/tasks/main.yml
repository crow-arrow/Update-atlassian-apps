---
- name: Update jira.baseurl in DB
  postgresql_query:
    db: "{{ db_name }}"
    login_user: "{{ db_user }}"
    login_password: "{{ db_pass }}"
    login_host: "{{ db_host }}"
    login_port: "{{ db_port | default(5432) }}"
    query: |
      UPDATE propertystring
      SET propertyvalue = 'https://{{ ansible_host }}/{{ env }}-{{ instance }}'
      FROM propertyentry PE
      WHERE PE.id = propertystring.id
        AND PE.property_key = 'jira.baseurl'

- name: Render HTML banner
  template:
    src: banner.html.j2
    dest: "/tmp/banner_{{ instance }}.html"

- name: Set alertheader banner
  shell: |
    cat "/tmp/banner_{{ instance }}.html" | PGPASSWORD="{{ db_pass }}" psql \
      -U {{ db_user }} -h {{ db_host }} -p {{ db_port | default(5432) }} \
      -d {{ db_name }} -c \
      "UPDATE propertytext
       SET propertyvalue = $$$(< /dev/stdin)$$$
       WHERE id = (SELECT id FROM propertyentry WHERE property_key='jira.alertheader');"
  args:
    executable: /bin/bash

- name: Set alertheader visibility
  postgresql_query:
    db: "{{ db_name }}"
    login_user: "{{ db_user }}"
    login_password: "{{ db_pass }}"
    login_host: "{{ db_host }}"
    login_port: "{{ db_port | default(5432) }}"
    query: |
      UPDATE propertystring
      SET propertyvalue = 'public'
      WHERE id = (SELECT id FROM propertyentry WHERE property_key='jira.alertheader.visibility')

- name: Update embedded Confluence links
  postgresql_query:
    db: "{{ db_name }}"
    login_user: "{{ db_user }}"
    login_password: "{{ db_pass }}"
    login_host: "{{ db_host }}"
    login_port: "{{ db_port | default(5432) }}"
    query: |
      UPDATE propertystring
      SET propertyvalue = 'https://{{ ansible_host }}/{{ env }}-pilot-aftersales-confluence'
      WHERE id = ANY (
        SELECT PS.id FROM propertystring PS
        JOIN propertyentry PE ON PS.id = PE.id
        WHERE PS.propertyvalue LIKE '%pilot-aftersales-confluence%'
          AND PE.property_key LIKE '%app%'
      )
