---
- name: Set SSH key path
  set_fact:
    ssh_key_path: "/tmp/ssh_key.pem"
  become: false
  tags: [sync_attachments]

- name: Fail if SSH key is not defined
  fail:
    msg: "POLYGRAN_PRIVATE_KEY is not defined!"
  when: lookup('env', 'POLYGRAN_PRIVATE_KEY') | length == 0
  become: false
  tags: [sync_attachments]

- name: Write private key to file (with mode 0600)
  copy:
    content: "{{ lookup('env', 'POLYGRAN_PRIVATE_KEY') }}"
    dest: "{{ ssh_key_path }}"
    mode: '0600'
  no_log: true
  become: false
  delegate_to: "{{ inventory_hostname }}"
  tags: [sync_attachments]

- name: Ensure target attachments directory exists
  ansible.builtin.file:
    path: "{{ INT_ATTACHMENTS_DIR }}"
    state: directory
    owner: "{{ ENV_USER }}"
    group: "{{ GROUP }}"
    mode: '0750'
  become: false
  tags: [sync_attachments]

- name: Sync Jira attachments from PROD
  ansible.posix.synchronize:
    src: "{{ USER }}@{{ remote_host }}:{{ PROD_ATTACHMENTS_DIR }}/"
    dest: "{{ INT_ATTACHMENTS_DIR }}/"
    mode: pull
    compress: true
    recursive: true
    links: true
    times: true
    perms: true
    rsync_path: "rsync"
    use_ssh_args: true
  vars:
    ansible_ssh_common_args: >-
      -o StrictHostKeyChecking=no
      -o UserKcurrent_datenHostsFile=/dev/null
      -i {{ ssh_key_path }}
  delegate_to: "{{ inventory_hostname }}"
  become: false
  tags: [sync_attachments]

- name: Fix directory permissions
  ansible.builtin.shell: |
    find {{ INT_ATTACHMENTS_DIR }}/ -type d -exec chmod 0750 {} +
  become: true
  become_user: "{{ ENV_USER }}"
  tags: [sync_attachments]

- name: Fix file permissions
  ansible.builtin.shell: |
    find {{ INT_ATTACHMENTS_DIR }}/ -type f -exec chmod 0640 {} +
  become: true
  become_user: "{{ ENV_USER }}"
  tags: [sync_attachments]

- name: Clean up private key
  file:
    path: "{{ ssh_key_path }}"
    state: absent
  become: false
  delegate_to: "{{ inventory_hostname }}"
  tags: [sync_attachments]